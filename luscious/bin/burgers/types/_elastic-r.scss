// Elastic Reverse

@mixin burger--elastic-r {

	@include burger;
	.burger-inner {
		top: $burger-layer-height / 2;
		transition-duration: 0.275s;
		transition-timing-function: cubic-bezier(0.68, -0.55, 0.265, 1.55);

		&::before {
			top: $burger-layer-height + $burger-layer-spacing;
			transition: opacity 0.125s 0.275s ease;
		}

		&::after {
			top: ($burger-layer-height * 2) + ($burger-layer-spacing * 2);
			transition: transform 0.275s cubic-bezier(0.68, -0.55, 0.265, 1.55);
		}
	}

	&.is-active {
		.burger-inner {
			$y-offset: $burger-layer-spacing + $burger-layer-height;

			transform: translate3d(0, $y-offset, 0) rotate(-135deg);
			transition-delay: 0.075s;

			&::before {
				transition-delay: 0s;
				opacity: 0;
			}

			&::after {
				transform: translate3d(0, $y-offset * -2, 0) rotate(270deg);
				transition-delay: 0.075s;
			}
		}
	}
}

// -------------------------------------
// Utility Class
@if index($burger-types, elastic-r) {
	.burger--elastic-r {
		@include burger--elastic-r;
	}
}
