// 3DX Reverse

@mixin burger--3dx-r {

	@include burger;
	.burger-box {
		perspective: $burger-layer-width * 2;
	}

	.burger-inner {
		transition: transform 0.15s cubic-bezier(0.645, 0.045, 0.355, 1),
								background-color 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1);

		&::before,
		&::after {
			transition: transform 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1);
		}
	}

	&.is-active {
		.burger-inner {
			background-color: transparent;
			transform: rotateY(-180deg);

			&::before {
				transform: translate3d(0, $burger-layer-height + $burger-layer-spacing, 0) rotate(45deg);
			}

			&::after {
				transform: translate3d(0, ($burger-layer-height + $burger-layer-spacing) * -1, 0) rotate(-45deg);
			}
		}
	}
}

// -------------------------------------
// Utility Class
@if index($burger-types, 3dx-r) {
	.burger--3dx-r {
		@include burger--3dx-r;
	}
}
