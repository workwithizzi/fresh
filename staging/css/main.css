/*! ========================================================= */
/*! Title:    Luscious Sass Starter                           */
/*! Version:  0.0.1                                           */
/*! Info:     Part Sass starter and part front-end tool kit.  */
/*! @link     https://github.com/yisraelgrimes/luscious       */
/*! Site:     https://                                        */
/*! Author:   Yisrael Grimes                                  */
/*! Email:    yisraelgrimes@gmail.com                         */
/*! ========================================================= */
/* line 6, dev/styles/03_base/_resets.sass */
html,
body,
h1,
h2,
h3,
h4,
h5,
h6,
ul,
li,
p,
blockquote {
	margin: 0;
	padding: 0;
}

/* line 27, dev/styles/03_base/_resets.sass */
input,
textarea,
button {
	border: 0;
	border-radius: 0;
	outline: none;
	-webkit-appearance: none;
	   -moz-appearance: none;
	        appearance: none;
}

/* line 35, dev/styles/03_base/_resets.sass */
input:hover, input:active, input:focus,
textarea:hover,
textarea:active,
textarea:focus,
button:hover,
button:active,
button:focus {
	outline: none;
}

/* line 42, dev/styles/03_base/_resets.sass */
embed,
iframe,
img,
object,
video {
	max-width: 100%;
}

/* line 6, dev/styles/03_base/_base.sass */
html {
	font-size: 62.5%;
	line-height: 1.5;
	-webkit-box-sizing: border-box;
	        box-sizing: border-box;
	height: 100%;
}

/* line 12, dev/styles/03_base/_base.sass */
*,
*:before,
*:after {
	-webkit-box-sizing: inherit;
	        box-sizing: inherit;
}

/* line 18, dev/styles/03_base/_base.sass */
body {
	height: 100%;
	font-size: 1.6rem;
}

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uc2NzcyIsIm1haW4uY3NzIiwiMDNfYmFzZS9fcmVzZXRzLnNhc3MiLCIwM19iYXNlL19iYXNlLnNhc3MiLCIwMV91dGlscy9sdXNjaW91cy9zZXR0aW5ncy9fYmFzZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBLGdFQUFnRTtBQUNoRSxnRUFBZ0U7QUFDaEUsZ0VBQWdFO0FBQ2hFLGdFQUFnRTtBQUNoRSxnRUFBZ0U7QUFDaEUsZ0VBQWdFO0FBQ2hFLGdFQUFnRTtBQUNoRSxnRUFBZ0U7QUFDaEUsZ0VBQWdFO0FDRmhFLDZDQUE2QztBQ0o3Qzs7Ozs7Ozs7Ozs7O0NBWUMsVUFBUztDQUNULFdBQVU7Q0FBSTs7QURRZiw4Q0FBOEM7QUNBOUM7OztDQUdDLFVBQVM7Q0FDVCxpQkFBZ0I7Q0FDaEIsY0FBYTtDQUNiLHlCQUFnQjtJQUFoQixzQkFBZ0I7U0FBaEIsaUJBQWdCO0NBS0k7O0FERHJCLDhDQUE4QztBQ1Y5Qzs7Ozs7OztDQVdFLGNBQWE7Q0FBSTs7QURVbkIsOENBQThDO0FDTjlDOzs7OztDQUtDLGdCQUFlO0NBQUk7O0FEVXBCLDJDQUEyQztBRW5EM0M7Q0FDQyxpQkNJcUI7Q0RIckIsaUJDYXFCO0NEWnJCLCtCQUFzQjtTQUF0Qix1QkFBc0I7Q0FDdEIsYUFBWTtDQUFJOztBRnVEakIsNENBQTRDO0FFckQ1Qzs7O0NBR0MsNEJBQW1CO1NBQW5CLG9CQUFtQjtDQUFJOztBRnlEeEIsNENBQTRDO0FFdEQ1QztDQUNDLGFBQVk7Q0FDWixrQkNTc0I7Q0RUTyIsImZpbGUiOiJtYWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBjaGFyc2V0ICd1dGYtOCc7XG4vLyBMdXMgdjAuMC4xXG5cbi8qISA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qISBUaXRsZTogICAgTHVzY2lvdXMgU2FzcyBTdGFydGVyICAgICAgICAgICAgICAgICAgICAgICAgICAgKi9cbi8qISBWZXJzaW9uOiAgMC4wLjEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi9cbi8qISBJbmZvOiAgICAgUGFydCBTYXNzIHN0YXJ0ZXIgYW5kIHBhcnQgZnJvbnQtZW5kIHRvb2wga2l0LiAgKi9cbi8qISBAbGluayAgICAgaHR0cHM6Ly9naXRodWIuY29tL3lpc3JhZWxncmltZXMvbHVzY2lvdXMgICAgICAgKi9cbi8qISBTaXRlOiAgICAgaHR0cHM6Ly8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi9cbi8qISBBdXRob3I6ICAgWWlzcmFlbCBHcmltZXMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi9cbi8qISBFbWFpbDogICAgeWlzcmFlbGdyaW1lc0BnbWFpbC5jb20gICAgICAgICAgICAgICAgICAgICAgICAgKi9cbi8qISA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuXG4vLyBOb3JtYWxpemUgaXMgYmVpbmcgYWRkZWQgd2l0aCBndWxwIGFzIHNlcGFyYXRlIGNzcyBmaWxlIHRocm91Z2ggaHRtbFxuLy8gYW5kIHdpbGwgYmUgY29uY2F0ZWQgaW50byB0aGUgbWFpbi5jc3Mgd2l0aCBndWxwIGR1cmluZyB0aGUgZmluYWwgYnVpbGQuXG4vLyBJdCBpcyBhbHNvIGF2YWlsYWJsZSBpbiBMdXNjaW91cyBidXQgaXNuJ3QgaW1wb3J0ZWQgYnkgZGVmYXVsdC5cbi8vIEBpbXBvcnQgXCIwMV91dGlscy9sdXNjaW91cy9zbmlwcGV0cy9fbm9ybWFsaXplLnNjc3NcIjtcblxuXG4vLyBQcm9qZWN0IFNldHRpbmdzXG4vLyBAaW1wb3J0IFwiMDJfc2V0dGluZ3MvaW5kZXhcIjtcblxuXG4vLyBVdGlsaXRpZXMvVmVuZG9ycy9Ub29sc1xuQGltcG9ydCBcIjAxX3V0aWxzL2x1c2Npb3VzL2x1c2Npb3VzXCI7XG5cblxuXG4vLyBCYXNlIFN0eWxlc1xuQGltcG9ydCBcIjAzX2Jhc2UvcmVzZXRzXCI7XG5AaW1wb3J0IFwiMDNfYmFzZS9iYXNlXCI7XG5AaW1wb3J0IFwiMDNfYmFzZS90eXBvZ3JhcGh5XCI7XG5AaW1wb3J0IFwiMDNfYmFzZS9sX2hlYWRlclwiO1xuXG4vLyBPYmplY3RzXG5AaW1wb3J0IFwiMDRfb2JqZWN0cy9idXR0b25zXCI7XG5cbi8vIENvbXBvbmVudHNcbkBpbXBvcnQgXCIwNV9jb21wb25lbnRzL25hdlwiO1xuXG4vLyBQYWdlc1xuQGltcG9ydCBcIjA2X3BhZ2VzL2hvbWVcIjtcblxuLy8gVGhlbWVzXG5AaW1wb3J0IFwiMDdfdGhlbWVzL2RlZmF1bHRcIjtcblxuLy8gU2hhbWVcbkBpbXBvcnQgXCJzaGFtZVwiO1xuIiwiLyohID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyohIFRpdGxlOiAgICBMdXNjaW91cyBTYXNzIFN0YXJ0ZXIgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xuLyohIFZlcnNpb246ICAwLjAuMSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xuLyohIEluZm86ICAgICBQYXJ0IFNhc3Mgc3RhcnRlciBhbmQgcGFydCBmcm9udC1lbmQgdG9vbCBraXQuICAqL1xuLyohIEBsaW5rICAgICBodHRwczovL2dpdGh1Yi5jb20veWlzcmFlbGdyaW1lcy9sdXNjaW91cyAgICAgICAqL1xuLyohIFNpdGU6ICAgICBodHRwczovLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xuLyohIEF1dGhvcjogICBZaXNyYWVsIEdyaW1lcyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xuLyohIEVtYWlsOiAgICB5aXNyYWVsZ3JpbWVzQGdtYWlsLmNvbSAgICAgICAgICAgICAgICAgICAgICAgICAqL1xuLyohID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyogbGluZSA2LCBkZXYvc3R5bGVzLzAzX2Jhc2UvX3Jlc2V0cy5zYXNzICovXG5odG1sLFxuYm9keSxcbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNixcbnVsLFxubGksXG5wLFxuYmxvY2txdW90ZSB7XG5cdG1hcmdpbjogMDtcblx0cGFkZGluZzogMDtcbn1cblxuLyogbGluZSAyNywgZGV2L3N0eWxlcy8wM19iYXNlL19yZXNldHMuc2FzcyAqL1xuaW5wdXQsXG50ZXh0YXJlYSxcbmJ1dHRvbiB7XG5cdGJvcmRlcjogMDtcblx0Ym9yZGVyLXJhZGl1czogMDtcblx0b3V0bGluZTogbm9uZTtcblx0YXBwZWFyYW5jZTogbm9uZTtcbn1cblxuLyogbGluZSAzNSwgZGV2L3N0eWxlcy8wM19iYXNlL19yZXNldHMuc2FzcyAqL1xuaW5wdXQ6aG92ZXIsIGlucHV0OmFjdGl2ZSwgaW5wdXQ6Zm9jdXMsXG50ZXh0YXJlYTpob3ZlcixcbnRleHRhcmVhOmFjdGl2ZSxcbnRleHRhcmVhOmZvY3VzLFxuYnV0dG9uOmhvdmVyLFxuYnV0dG9uOmFjdGl2ZSxcbmJ1dHRvbjpmb2N1cyB7XG5cdG91dGxpbmU6IG5vbmU7XG59XG5cbi8qIGxpbmUgNDIsIGRldi9zdHlsZXMvMDNfYmFzZS9fcmVzZXRzLnNhc3MgKi9cbmVtYmVkLFxuaWZyYW1lLFxuaW1nLFxub2JqZWN0LFxudmlkZW8ge1xuXHRtYXgtd2lkdGg6IDEwMCU7XG59XG5cbi8qIGxpbmUgNiwgZGV2L3N0eWxlcy8wM19iYXNlL19iYXNlLnNhc3MgKi9cbmh0bWwge1xuXHRmb250LXNpemU6IDYyLjUlO1xuXHRsaW5lLWhlaWdodDogMS41O1xuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHRoZWlnaHQ6IDEwMCU7XG59XG5cbi8qIGxpbmUgMTIsIGRldi9zdHlsZXMvMDNfYmFzZS9fYmFzZS5zYXNzICovXG4qLFxuKjpiZWZvcmUsXG4qOmFmdGVyIHtcblx0Ym94LXNpemluZzogaW5oZXJpdDtcbn1cblxuLyogbGluZSAxOCwgZGV2L3N0eWxlcy8wM19iYXNlL19iYXNlLnNhc3MgKi9cbmJvZHkge1xuXHRoZWlnaHQ6IDEwMCU7XG5cdGZvbnQtc2l6ZTogMS42cmVtO1xufVxuIiwiLy8gT3BpbmlvbmF0ZWQgUmVzZXRzIG9uIHRvcCBvZiBOb3JtYWxpemVcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuXG4vLyBSZXNldHMgbWFyZ2lucyBhbmQgcGFkZGluZ3MgZm9yIGh0bWwsIGJvZHksIGhlYWRlcnMsIHVsLCBvbCwgYW5kIHBcbmh0bWwsXG5ib2R5LFxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2LFxudWwsXG5saSxcbnAsXG5ibG9ja3F1b3RlIHtcblx0bWFyZ2luOiAwO1xuXHRwYWRkaW5nOiAwOyB9XG5cblxuLy8gQ29tcGxldGVseSByZXNldHMgZm9ybSBpdGVtc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gU3VwZXIgaGFyZCByZXNldCB0aGF0IHJlbW92ZXMgYWxsIGJvcmRlcnNcbi8vIGFuZCByYWRpdXMgb2YgYWxsIGZvcm0gaXRlbXMuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5pbnB1dCxcbnRleHRhcmVhLFxuYnV0dG9uIHtcblx0Ym9yZGVyOiAwO1xuXHRib3JkZXItcmFkaXVzOiAwO1xuXHRvdXRsaW5lOiBub25lO1xuXHRhcHBlYXJhbmNlOiBub25lO1xuXG5cdCY6aG92ZXIsXG5cdCY6YWN0aXZlLFxuXHQmOmZvY3VzIHtcblx0XHRvdXRsaW5lOiBub25lOyB9IH1cblxuXG4vLyBTZXQgSW1hZ2UgYW5kIE9iamVjdHMgdG8gaGF2ZSBhIG1heC13aWR0aCBvZiAxMDAlXG5lbWJlZCxcbmlmcmFtZSxcbmltZyxcbm9iamVjdCxcbnZpZGVvIHtcblx0bWF4LXdpZHRoOiAxMDAlOyB9XG4iLCIvLyBCYXNlIHN0eWxlcyBmb3IgaHRtbCBhbmQgYm9keVxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG5cbi8vIFVzZSBib3JkZXItYm94IGZvciBldmVyeXRoaW5nXG5odG1sIHtcblx0Zm9udC1zaXplOiAkaHRtbF9mb250X3NpemU7XG5cdGxpbmUtaGVpZ2h0OiAkYmFzZV9saW5lX2hlaWdodDtcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0aGVpZ2h0OiAxMDAlOyB9XG5cbiosXG4qOmJlZm9yZSxcbio6YWZ0ZXIge1xuXHRib3gtc2l6aW5nOiBpbmhlcml0OyB9XG5cblxuYm9keSB7XG5cdGhlaWdodDogMTAwJTtcblx0Zm9udC1zaXplOiAkYmFzZV9mb250X3NpemU7IH1cbiIsIi8vIEx1cyB2MC4wLjFcbi8vXG4vLyBEZWZpbmVzIGJhc2UgcnVsZXMgZm9yIEx1c2Npb3VzIGFuZCB5b3VyIHByb2plY3QuXG4vL1xuLy8gc2Fzcy1saW50OmRpc2FibGUgY2xhc3MtbmFtZS1mb3JtYXRcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuXG4vLyBIVE1MIFJvb3QgRm9udCBTaXplIChpbiBwZXJjZW50YWdlcylcbi8vIEFwcGxpZWQgdG8gaHRtbCBlbGVtZW50LiBPdGhlciBlbGVtZW50IHNpemluZyBpcyBiYXNlZCBvbiB0aGlzXG4kaHRtbF9mb250X3NpemU6IDYyLjUlICFkZWZhdWx0OyAvLyByb290ID09IDEwcHhcbi8vIDYyLjUlIGlzIHVzZWQgdG8gbWFrZSByZW0gbWF0aCBlYXNpZXIuIFJlbSBzaXplcyBhcmUgbm93IGRpdmlzaWJsZSBieSAxMC5cbi8vIEV4YW1wbGU6IFRvIGdldCBhIDIwcHggZXF1aXZhbGVudCwgeW91IG5vdyB1c2UgMnJlbSBpbnN0ZWFkIG9mIDEuMjVyZW0uXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gQmFzZWxpbmUgSGVpZ2h0XG4vLyBVc2VkIGZvciB2ZXJ0aWNhbCByaHl0aG0gYW5kIGJhc2VsaW5lIGdyaWRzXG4vLyBBcHBsaWVkIHRvIGh0bWwgKHJvb3QpIG9yIHRvIGJvZHkgZWxlbWVudFxuLy8gRG9uJ3QgZm9yZ2V0IHRvIGFkZCB5b3VyIHVuaXQgb2YgbWVhc3VyZW1lbnQgaGVyZSB0b28gaWYgeW91IHJlcXVpcmUgaXQuXG4kYmFzZV9saW5lX2hlaWdodDogMS41ICFkZWZhdWx0O1xuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIEJhc2UgRm9udC1TaXplXG4vLyBUaGlzIHdvdWxkIHN0YXJ0IGF0IHlvdXIgYm9keSBlbGVtZW50LlxuLy8gSSBzdWdnZXN0IHVzaW5nIHJlbSB1bml0cyBzbyB0aGF0IGl0IHdvcmtzIG9mZiBvZiB5b3VyIGh0bWxcbi8vIGZvbnQtc2l6ZSBidXQgeW91IGNhbiB1c2Ugd2hhdGV2ZXIgdW5pdCB5b3Ugd2lzaC5cbiRiYXNlX2ZvbnRfc2l6ZTogMS42cmVtICFkZWZhdWx0O1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9 */
