/*! ========================================================= */
/*! Title:    Luscious Sass Starter                           */
/*! Version:  0.0.1                                           */
/*! Info:     Part Sass starter and part front-end tool kit.  */
/*! @link     https://github.com/yisraelgrimes/luscious       */
/*! Site:     https://                                        */
/*! Author:   Yisrael Grimes                                  */
/*! Email:    yisraelgrimes@gmail.com                         */
/*! ========================================================= */
/* line 49, dev/styles/utils/luscious/bin/burgers/_base.scss */
.burger-box {
	width: 4rem;
	height: 2.4rem;
	display: inline-block;
	position: relative;
	background-color: transparent;
}

/* line 90, dev/styles/utils/luscious/bin/burgers/_base.scss */
.burger-inner {
	display: block;
	top: 50%;
	margin-top: -0.2rem;
}

/* line 61, dev/styles/utils/luscious/bin/burgers/_base.scss */
.burger-inner, .burger-inner::before, .burger-inner::after {
	width: 4rem;
	height: 0.4rem;
	background-color: #fafbfc;
	border-radius: 0.4rem;
	position: absolute;
	-webkit-transition-property: -webkit-transform;
	transition-property: -webkit-transform;
	transition-property: transform;
	transition-property: transform, -webkit-transform;
	-webkit-transition-duration: 0.15s;
	        transition-duration: 0.15s;
	-webkit-transition-timing-function: ease;
	        transition-timing-function: ease;
}

/* line 74, dev/styles/utils/luscious/bin/burgers/_base.scss */
.burger-inner::before, .burger-inner::after {
	content: "";
	display: block;
}

/* line 80, dev/styles/utils/luscious/bin/burgers/_base.scss */
.burger-inner::before {
	top: -1rem;
}

/* line 84, dev/styles/utils/luscious/bin/burgers/_base.scss */
.burger-inner::after {
	bottom: -1rem;
}

/* line 6, dev/styles/base/_resets.sass */
html,
body,
h1,
h2,
h3,
h4,
h5,
h6,
ul,
li,
p,
blockquote {
	margin: 0;
	padding: 0;
}

/* line 27, dev/styles/base/_resets.sass */
input,
textarea,
button {
	border: 0;
	border-radius: 0;
	outline: none;
	-webkit-appearance: none;
	   -moz-appearance: none;
	        appearance: none;
}

/* line 35, dev/styles/base/_resets.sass */
input:hover, input:active, input:focus,
textarea:hover,
textarea:active,
textarea:focus,
button:hover,
button:active,
button:focus {
	outline: none;
}

/* line 42, dev/styles/base/_resets.sass */
embed,
iframe,
img,
object,
video {
	max-width: 100%;
}

/* line 6, dev/styles/base/_base.sass */
html {
	font-size: 62.5%;
	line-height: 1.5;
	-webkit-box-sizing: border-box;
	        box-sizing: border-box;
	height: 100%;
}

/* line 12, dev/styles/base/_base.sass */
*,
*:before,
*:after {
	-webkit-box-sizing: inherit;
	        box-sizing: inherit;
}

/* line 18, dev/styles/base/_base.sass */
body {
	height: 100%;
	font-size: 1.6rem;
}

/*# sourceMappingURL=data:application/json;base64, */
