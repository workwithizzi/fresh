

// Button Mixin
// Adds all the rules needed for an HTML button element or to make a regular
// class look like a button.
//
// Default available options based on which parameters are used:
// - Color Profiles:
//   - no profile: outputs a primary button
//   - primary   : primary colors based on map in _settings.scss
//   - secondary : secondary colors based on map in _settings.scss
// - Modification Parameters:
//   - link    : styled like an <a> link but with btn colors
//   - hollow  : transparent background with a border color
//   - block   : makes the button a 'display: block'
//   - expand  : makes a block button and removes any side margin
//   - disable : makes the button appear disabled
//
// Example input/output at the bottom

@mixin btn($args: null) {
	// -------------------------------------
	// CONFIGURE:
	// Default colors from color $_map in settings.scss $btn-colors
	// -------------------------------------
	$_profile: 'primary';
	$_map: $btn-colors;

	// -------------------------------------
	// CONFIGURE:
	// Other default styles
	// -------------------------------------
	$_text-decoration: none;
	$_display: inline-block;
	$_margin-top: r(5);
	$_margin-right: 0;
	$_margin-bottom: r(5);
	$_margin-left: 0;
	$_width: auto;
	$_cursor: pointer;
	$_opacity: 1;

	// @nrml: Remove the margin in Firefox and Safari.
	padding: r(8);
	// @nrml: Change the font family/size/weight in all browsers.
	font-family: $font_stack_body;
	font-size: r(16);
	font-weight: 600;
	line-height: vr(base);
	border: r(1) solid;
	border-radius: 0;
	transition: all 250ms ease-in-out;

	// ----------------
	// CSS resets
	// ----------------
	text-align: center;
	vertical-align: middle;
	// @nrml: Show the overflow in Edge.
	overflow: visible;
	// @nrml: Correct the inability to style clickable types in iOS & Safari.
	appearance: none;
	// @nrml: Remove the inheritance of text transform in Edge/Firefox/IE.
	text-transform: none;
	[data-whatinput='mouse'] & {
		outline: 0;
	}

	// -------------------------------------
	// IGNORE: You can ignore everything below
	// -------------------------------------

	// If one of the params doesn't match a profile in the color map,
	// keep using the default color profile
	@each $arg in $args {
		@if index(map-keys($_map), $arg) {
			$_profile: $arg;
		}
		// 2DO-YG: Add feedback for when a param doesn't match a profile or
		// a mod option
	}

	// Default Colors based on map ($btn-colors) from 'settings.scss'
	// 2DO-YG: Add feedback function for when a profile is missing a key below
	$_text         : map_get_nested($_map, $_profile, color);
	$_bg           : map_get_nested($_map, $_profile, background);
	$_border       : map_get_nested($_map, $_profile, border);
	$_text-hover   : map_get_nested($_map, $_profile, hover-color);
	$_bg-hover     : map_get_nested($_map, $_profile, hover-background);
	$_border-hover : map_get_nested($_map, $_profile, hover-border);


	// Button Modifications
	@each $arg in $args {
		// Link
		@if index(link, $arg) {
			$_text         : $_bg;
			$_bg           : transparent;
			$_border       : transparent;
			$_text-hover   : $_bg-hover;
			$_bg-hover     : transparent;
			$_border-hover : transparent;
			$_text-decoration: underline;
		}
		// Hollow
		@if index(hollow, $arg) {
			$_text         : $_bg;
			$_border       : $_bg;
			$_bg           : transparent;
			$_text-hover   : $_text-hover;
			$_bg-hover     : $_bg-hover;
			$_border-hover : $_border-hover;
		}
		// Block
		@if index(block, $arg) {
			$_display: block;
		}
		// Expand
		@if index(expand, $arg) {
			$_display: block;
			$_margin-right: 0;
			$_margin-left: 0;
			$_width: 100%;
		}
		// Disable
		@if index(disable, $arg) {
			$_cursor: default;
			$_opacity: 0.4;
			$_text-hover: $_text;
			$_bg-hover: $_bg;
			$_border-hover: $_border;
		}
	} //@each

	// Modifications Applied
	// sass-lint:disable-block declarations-before-nesting
	margin: $_margin-top $_margin-right $_margin-bottom $_margin-left;
	width: $_width;
	display: $_display;
	cursor: $_cursor;
	opacity: $_opacity;
	text-decoration: $_text-decoration;
	color: $_text;
	background: $_bg;
	border-color: $_border;
	&:hover {
		color: $_text-hover;
		background: $_bg-hover;
		border-color: $_border-hover;
	}
} //btn mixin


// -------------------------------------
// Example Usage
// -------------------------------------
// SCSS Input:
// .element {
//   @include btn(secondary);
// }
//
//
// CSS Output:
// .element {
// 	padding: 0.5rem;
// 	font-family: 'Open Sans', 'Helvetica Neue', 'Helvetica', 'Arial', sans-serif;
// 	font-size: 1rem;
// 	font-weight: 600;
// 	line-height: 1.5rem;
// 	border: 0.0625rem solid;
// 	border-radius: 0;
// 	-webkit-transition: all 250ms ease-in-out;
// 	transition: all 250ms ease-in-out;
// 	text-align: center;
// 	vertical-align: middle;
// 	overflow: visible;
// 	-webkit-appearance: none;
// 	   -moz-appearance: none;
// 	        appearance: none;
// 	text-transform: none;
// 	margin: 0.3125rem 0 0.3125rem 0;
// 	width: auto;
// 	display: inline-block;
// 	cursor: pointer;
// 	opacity: 1;
// 	text-decoration: none;
// 	color: #F9FAFC;
// 	background: #F24878;
// 	border-color: transparent;
// }
